<div class="wrapper">
  <h1>String#slice</h1>

  <h2>The slice method is overloaded and accepts several different arg types. Slice returns either a String or nil. </h2>
  <ul>
    <li>slice(index)</li>
    <li>slice(start,length)</li>
    <li>slice(range)</li>
    <li>slice(match_str)</li>
  </ul>


  <ol>
  <li>1)If passed a single index, returns a substring of one character at that index.</li>
  <li>If passed a start index and a length, returns a substring containing length characters.</li>
  <li>3)If passed a range, its beginning and end are interpreted as offsets delimiting the substring to be returned.</li>
  <li>If a match_str is given, that string is returned if it occurs in the string.</li>
  </ol>

  <p>For the first 3 cases above if an index is negative, it is counted from the end of the string. 
  Note: For the case 2 and case 3 the starting index is just before a character.

  Slice returns nil if the initial index falls outside the string or the length is negative.

  In addition, 4)returns nil if the match string cannot be found.
  </p>

  <h3>In the examples below a = "hello there" and a.length=10</h3>
  <ul>
  <li>a[1]                   #=> "e"</li>
  <li>a[2, 3]                #=> "llo"</li>
  <li>a[2..3]                #=> "ll"</li>
  <li>a[-3, 2]               #=> "er"</li>
  <li>a[7..-2]               #=> "her"</li>
  <li>a[-4..-2]              #=> "her"</li>
  <li>a[-2..-4]              #=> ""</li>
  <li>a[11, 0]               #=> ""</li>
  <li>a[11]                  #=> nil</li>
  <li>a[12, 0]               #=> nil</li>
  <li>a[12..-1]              #=> nil</li>
  <li>a["lo"]                #=> "lo"</li>
  <li>a["bye"]               #=> nil</li>

  </div>